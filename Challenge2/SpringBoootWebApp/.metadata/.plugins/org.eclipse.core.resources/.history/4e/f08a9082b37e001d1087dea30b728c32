package com.azure.webapp;

import com.microsoft.azure.AzureEnvironment;
import com.microsoft.azure.credentials.ApplicationTokenCredentials;
import com.microsoft.azure.management.Azure;
import com.microsoft.azure.management.compute.VirtualMachine;
import com.microsoft.azure.management.resources.fluentcore.arm.Region;
import com.microsoft.rest.LogLevel;
import com.azure.core.credential.TokenCredential;
import com.azure.core.management.profile.AzureProfile;
import com.azure.identity.AzureAuthorityHosts;
import com.azure.identity.EnvironmentCredentialBuilder;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;

public class AzureCompute {

	public static void main(String[] args) {
		
		
		TokenCredential credential = new EnvironmentCredentialBuilder()
	            .authorityHost(AzureAuthorityHosts.AZURE_PUBLIC_CLOUD)
	            .build();

	// Please finish 'Set up authentication' step first to set the four environment variables: AZURE_SUBSCRIPTION_ID, AZURE_CLIENT_ID, AZURE_CLIENT_SECRET, AZURE_TENANT_ID
	AzureProfile profile = new AzureProfile(AzureEnvironment.AZURE);

	AzureResourceManager azureResourceManager = AzureResourceManager.configure()
	        .withLogLevel(HttpLogDetailLevel.BASIC)
	        .authenticate(credential, profile)
	        .withDefaultSubscription();
		
		//tenant id az account tenant list
		Azure azure = Azure.configure()
			    .withLogLevel(LogLevel.BASIC)
			    .authenticate(new ApplicationTokenCredentials("d6c586cb-1aba-4e7b-a869-89b7414d6a03", "b3594ec4-c17b-4852-8217-2035b4b0a286", "Wuh8Q~1OV-wg8DjpUZ9xOpxFHfKIKbZgCo36RbPq", AzureEnvironment.AZURE))
			    .withSubscription("d57b17c6-c6ae-4051-919f-6f86ca9b0684");

			// Use the client to query the metadata for the specified virtual machine
			VirtualMachine vm = azure.virtualMachines().getById("/subscriptions/d57b17c6-c6ae-4051-919f-6f86ca9b0684/resourceGroups/azure-stack/providers/Microsoft.Compute/virtualMachines/web-vm");

			// Convert the virtual machine metadata to JSON and print the result
			ObjectMapper mapper = new ObjectMapper();
			try {
				System.out.println(mapper.writeValueAsString(vm));
			} catch (JsonProcessingException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		// TODO Auto-generated method stub

	}

}
